////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мТекущийПакет, мТекущийПуть, мПредыдущийЭлемент;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ПолучитьИдЗапросаПоПути(Путь)
	Если Не ЗначениеЗаполнено(Путь) ИЛИ Путь.Количество() = 0 Тогда 
		Возврат Неопределено
	Иначе
		Возврат Путь[0].id
	КонецЕсли;
КонецФункции // ПолучитьИдЗапросаПоПути()

Функция ЭтоЗапись(Знач Режим)
	Возврат (Режим = гОперацииСЗапросами().Сохранить ИЛИ Режим = гОперацииСЗапросами().СохранитьКАК ИЛИ Режим = гОперацииСЗапросами().СохранитьВОблако);
КонецФункции

Функция типыИсточниковДанных()
	Возврат Новый Структура("Пакет, Запрос, Код", "Пакет", "Запрос", "Код");
КонецФункции

Функция режимыФормированияСписка()
	Возврат Новый Структура("Вверх, ВыбратьНовогоРодителя, Обновить", "Вверх", "ВыбратьНовогоРодителя", "Обновить");
КонецФункции // режимыФормированияСписка()

Процедура КнопкаВыполнитьНажатиеДействие()
	
	Если Не ЗначениеЗаполнено(ИмяЭлементаИзОблака) Тогда 
		ПоказатьПредупреждение(, "Введите имя элемента.");
		Возврат;		
	КонецЕсли;
	
	Если ЭтоЗапись(Режим) и Тип <> типЭлемента Тогда 
		ПоказатьПредупреждение(, "Выберите элемент с типом " + Тип +" или введите новый.");
		Возврат;
	КонецЕсли;
	
	Если ЭтоЗапись(Режим) и Тип = типыИсточниковДанных().Код И ПолучитьИдЗапросаПоПути(мТекущийПуть) = Неопределено Тогда 
		ПоказатьПредупреждение(, "Выберите запрос, для которого необходимо сохранить код.");
		Возврат;
	КонецЕсли;
	
	лСтруктураПараметров = Новый Структура;
	лСтруктураПараметров.Вставить("Выбран"                    , Истина);
	лСтруктураПараметров.Вставить("Имя"                       , ИмяЭлементаИзОблака);
	лСтруктураПараметров.Вставить("Тип"                       , типЭлемента);
	лСтруктураПараметров.Вставить("ВключатьПодчиненныеЗапросы", ?(типЭлемента = типыИсточниковДанных().Запрос И ЭтоЗапись(Режим), Не НеВключатьПодчиненныеЗапросы, Истина)); // #рефакторинг использовать параметр только там, где он имеет смысл (при выгрузке запросов), в остальных случаях отправлять неопределено (сейчас неопределено не обрабатывается)
	лСтруктураПараметров.Вставить("ИдПакета"                  , мТекущийПакет);
	лСтруктураПараметров.Вставить("ИдРодительскогоЗапроса"    , ПолучитьИдЗапросаПоПути(мТекущийПуть));
	лСтруктураПараметров.Вставить("ИдЗапроса"                 , ПолучитьИдЗапросаПоПути(мТекущийПуть));
	лСтруктураПараметров.Вставить("ИдКода"                    , Неопределено);
	
	// далее дозаполняются! ключи: ИдПакета, ИдРодительскогоЗапроса, ИдЗапроса, ИДКода
	
	лВыбранныйЭлементМассив = СписокЭлементовИзОблака.НайтиСтроки(Новый Структура("Имя, Тип", ИмяЭлементаИзОблака, типЭлемента));
	
	лВыбранныйЭлемент = ?(лВыбранныйЭлементМассив.Количество() > 0, лВыбранныйЭлементМассив[0], Неопределено);
	
	Если лВыбранныйЭлемент <> Неопределено Тогда 
		лИдентификатор = лВыбранныйЭлемент.id;
		
		Если типЭлемента = типыИсточниковДанных().Код Тогда 
			лСтруктураПараметров.Вставить("ИдКода"   , лИдентификатор);
		ИначеЕсли типЭлемента = типыИсточниковДанных().Запрос Тогда 
			лСтруктураПараметров.Вставить("ИдЗапроса", лИдентификатор);
		ИначеЕсли типЭлемента = типыИсточниковДанных().Пакет Тогда 
			лСтруктураПараметров.Вставить("ИдПакета", лИдентификатор);
		КонецЕсли;
		
		Если Режим = гОперацииСЗапросами().СохранитьКАК Тогда 
			ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаРезультатаВопроса", ЭтаФорма, лСтруктураПараметров),
				ИмяЭлементаИзОблака + " уже существует. 
					|Вы хотите его перезаписать",
				РежимДиалогаВопрос.ДаНет,,
				КодВозвратаДиалога.Да,
				"Сохранить как...");
			Возврат;
		КонецЕсли;
	ИначеЕсли ЭтоЗапись(Режим) Тогда 
		Если типЭлемента = типыИсточниковДанных().Код Тогда 
			лСтруктураПараметров.Вставить("ИдКода"   , гИдентификаторНовогоОбъектаВОблаке());
		ИначеЕсли типЭлемента = типыИсточниковДанных().Запрос Тогда 
			лСтруктураПараметров.Вставить("ИдЗапроса", гИдентификаторНовогоОбъектаВОблаке());
		ИначеЕсли типЭлемента = типыИсточниковДанных().Пакет Тогда 
			лСтруктураПараметров.Вставить("ИдПакета", гИдентификаторНовогоОбъектаВОблаке());
		КонецЕсли;
	Иначе
		ПоказатьПредупреждение(, "Выберите существующий пакет с запросами.");
		Возврат;
	КонецЕсли;
	
	Закрыть(лСтруктураПараметров);

КонецПроцедуры // КнопкаВыполнитьНажатиеДействие()
	
Процедура ОбновитьСтрокуСПутемКЗапросу(ИмяПакета)
	
	Если ЭтоЗапись(Режим) Тогда 
		Если Тип = гТипыИсточниковДанных().Пакет Тогда 
			Заголовок = "Выберите пакет для записи";
		ИначеЕсли Тип = гТипыИсточниковДанных().Запрос Тогда 
			Заголовок = "Выберите запрос для записи";
		ИначеЕсли Тип = гТипыИсточниковДанных().Код Тогда 
			Заголовок = "Выберите код для записи";
		Иначе
			Заголовок = "ошибка: неопределен тип для записи";
		КонецЕсли;
	Иначе
		Если ИмяПакета = Неопределено Тогда 
			Заголовок = "Выберите пакет с запросами";
		Иначе
			Заголовок = "Выберите запрос или код";
		КонецЕсли;	
	КонецЕсли;
	
	Если ИмяПакета = Неопределено Тогда 
		Путь = "";
	Иначе
		лПутьВнутриПакета = "";
		Если ЗначениеЗаполнено(мТекущийПуть) Тогда 
			Для Каждого Строка Из мТекущийПуть Цикл
				лПутьВнутриПакета = Строка.name + " \ " + лПутьВнутриПакета;
			КонецЦикла;
		КонецЕсли;
		Путь = "[" + ИмяПакета + "] \ " + лПутьВнутриПакета;
	КонецЕсли;	
КонецПроцедуры // ОбновитьСтрокуСПутемКЗапросу()

Процедура ЗаполнитьОбъектамиИзОблака(Отказ)
	
	лСоединение = гВосстановитьИдентификаторСессииConsqueryCloud();
	лДанныеОблака = гПолучитьСписокОбъектовВОблаке(лСоединение);

	Если лДанныеОблака.Статус <> "OK" Тогда 
		Сообщить(лДанныеОблака.ТекстОшибки, СтатусСообщения.Важное);		
		Если лДанныеОблака.НеобходимоПереподключиться Тогда 
			Оповестить("НеобходимоПереподключиться", Истина, ЭтаФорма);
		КонецЕсли;
		Отказ = Истина;
	Иначе
		ЗаполнитьСписокДаннымиИзОблака(лДанныеОблака, лДанныеОблака.ЭтоСписокПакетов);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьОбъектамиИзОблака()

Процедура ЗаполнитьСписокДаннымиИзОблака(лДанныеОблака, ЭтоСписокПакетов)
	
	СписокЭлементовИзОблака.Очистить();
	Если ЭтоСписокПакетов Тогда 
		Для каждого лДанныеПакета Из лДанныеОблака.СписокПакетов Цикл
			лНоваяСтрока = СписокЭлементовИзОблака.Добавить();
			лНоваяСтрока.Имя        = лДанныеПакета.name;
			лНоваяСтрока.Тип        = типыИсточниковДанных().Пакет;
			лНоваяСтрока.Создан     = лДанныеПакета.dateCreate;
			лНоваяСтрока.Изменен    = лДанныеПакета.dateMod;
			лНоваяСтрока.Информация = лДанныеПакета.idUser + " | Запросов: " + лДанныеПакета.queryCount;
			лНоваяСтрока.id         = лДанныеПакета.id;
		КонецЦикла; 
		мТекущийПуть = Неопределено;
		мТекущийПакет  = Неопределено;
		
		ОбновитьСтрокуСПутемКЗапросу(Неопределено);
	Иначе
		лТипЭлементаСписка = Неопределено;
		
		Для каждого лДанныеПакета Из лДанныеОблака.Список Цикл
			лНоваяСтрока = СписокЭлементовИзОблака.Добавить();
			лНоваяСтрока.Имя        = лДанныеПакета.name;
			лНоваяСтрока.Создан     = лДанныеПакета.dateCreate;
			лНоваяСтрока.Изменен    = лДанныеПакета.dateMod;
			лНоваяСтрока.Информация = лДанныеПакета.info;
			лНоваяСтрока.id         = лДанныеПакета.id;
			
			Если типыИсточниковДанных().Свойство(лДанныеПакета.type, лТипЭлементаСписка) = Неопределено Тогда 
				лНоваяСтрока.Тип = "не определен";
			Иначе
				лНоваяСтрока.Тип = лТипЭлементаСписка;
			КонецЕсли;			
		КонецЦикла;
		
		мТекущийПуть = лДанныеОблака.ПутьКРодителю;
		мТекущийПакет  = лДанныеОблака.идПакета;
		
		ОбновитьСтрокуСПутемКЗапросу(лДанныеОблака.ИмяПакета);
	КонецЕсли;
КонецПроцедуры // ЗаполнитьСписокДаннымиИзОблака()

Процедура ЗаполнитьПакетамиИзОблака(Отказ)
	
	лСоединение = гВосстановитьИдентификаторСессииConsqueryCloud();
	лДанныеОблака = гПолучитьСписокФайловВОблаке(лСоединение);
	
	Если лДанныеОблака.Статус <> "OK" Тогда 
		Сообщить(лДанныеОблака.ТекстОшибки, СтатусСообщения.Важное);		
		Если лДанныеОблака.НеобходимоПереподключиться Тогда 
			Оповестить("НеобходимоПереподключиться", Истина, ЭтаФорма);
		КонецЕсли;
		Отказ = Истина;
	Иначе
		ЗаполнитьСписокДаннымиИзОблака(лДанныеОблака, Истина)
	КонецЕсли;
КонецПроцедуры // ЗаполнитьПакетамиИзОблака()

Процедура ЗаполнитьЗапросамиИзОблака(Знач идПакета, Режим, НовыйРодитель = Неопределено, Отказ)
	
	Если Режим = режимыФормированияСписка().Вверх Тогда 
		Если ЗначениеЗаполнено(мТекущийПуть) И мТекущийПуть.Количество() > 0 Тогда 
			идТекущегоЭлемента = мТекущийПуть[0].id;
		Иначе
			идТекущегоЭлемента = идПакета
		КонецЕсли;	
	Иначе
		идТекущегоЭлемента = Неопределено
	КонецЕсли;	
	лЗаполнятьСписок = Истина;
	
	Если Не ЗначениеЗаполнено(идПакета) Тогда 
		ЗаполнитьОбъектамиИзОблака(Отказ);
		лЗаполнятьСписок = Ложь;
	ИначеЕсли Режим = режимыФормированияСписка().Вверх Тогда 
		Если Не ЗначениеЗаполнено(мТекущийПуть) ИЛИ мТекущийПуть.Количество() = 0 Тогда 
			ЗаполнитьПакетамиИзОблака(Отказ);
			лЗаполнятьСписок = Ложь;
		ИначеЕсли мТекущийПуть.Количество() = 1 Тогда 
			идРодителя = Неопределено;
		Иначе
			идРодителя = мТекущийПуть[1].id; // выбираем второй элемент массива
		КонецЕсли;
	ИначеЕсли Режим = режимыФормированияСписка().Обновить Тогда 
		Если Не ЗначениеЗаполнено(Путь) Тогда 
			ЗаполнитьПакетамиИзоблака(Отказ);
			лЗаполнятьСписок = Ложь;
		ИначеЕсли ЗначениеЗаполнено(мТекущийПуть) Тогда 
			идРодителя = мТекущийПуть[0].id;
		Иначе
			идРодителя = Неопределено;
		КонецЕсли;
	Иначе
		идРодителя = НовыйРодитель.идРодителя;
	КонецЕсли;
	
	Если лЗаполнятьСписок Тогда 
		
		лСоединение = гВосстановитьИдентификаторСессииConsqueryCloud();
		лДанныеОблака = гПолучитьСписокЗапросовВОблаке(лСоединение, идПакета, идРодителя);
		
		Если лДанныеОблака.Статус <> "OK" Тогда 
			Сообщить(лДанныеОблака.ТекстОшибки, СтатусСообщения.Важное);		
			Если лДанныеОблака.НеобходимоПереподключиться Тогда 
				Оповестить("НеобходимоПереподключиться", Истина, ЭтаФорма);
			КонецЕсли;
			Отказ = Истина;
		Иначе
			ЗаполнитьСписокДаннымиИзОблака(лДанныеОблака, Ложь);
		КонецЕсли;		
	КонецЕсли;
	
	Если Не Отказ Тогда 
		Если ЗначениеЗаполнено(идТекущегоЭлемента) Тогда 
			ЭлементыФормы.СписокЭлементовИзОблака.ТекущаяСтрока = СписокЭлементовИзОблака.Найти(идТекущегоЭлемента, "id");
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры // ЗаполнитьПакетамиИзОблака()

Процедура КоманднаяПанельКонтМенюОбновить(Кнопка)
	ОбновитьДействие();
КонецПроцедуры

Процедура ОбновитьДействие(Отказ = Ложь)
	ЗаполнитьЗапросамиИзОблака(мТекущийПакет, режимыФормированияСписка().Обновить,, Отказ);
КонецПроцедуры // ОбновитьДействие()

Процедура ЗакрытьформуСВыбором(ПараметрыЗакрытия)	
	Закрыть(ПараметрыЗакрытия);	
КонецПроцедуры //ЗакрытьформуСВыбором()

// ЗавершенияАсинхронныхВызовов

Функция ПолучитьJSONЗначения(Значение)
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.ПроверятьСтруктуру = Ложь;
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(,,,,,,Истина));
	ЗаписатьJSON(ЗаписьJSON, Значение, Новый НастройкиСериализацииJSON);
	Возврат ЗаписьJSON.Закрыть();
КонецФункции

Процедура ПослеЗакрытияВопросаУдалить(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		лСоединение = гВосстановитьИдентификаторСессииConsqueryCloud();
		лСписокИдПакетов = Новый Массив;
		лСписокИдЗапросов = Новый Массив;
		лСписокИдКодов = Новый Массив;
		
		Для каждого лСтрокаСФайлом Из ЭлементыФормы.СписокЭлементовИзОблака.ВыделенныеСтроки Цикл
			Если лСтрокаСФайлом.Тип = типыИсточниковДанных().Пакет Тогда 
				лСписокИдПакетов.Добавить(лСтрокаСФайлом.id);
			ИначеЕсли лСтрокаСФайлом.Тип = типыИсточниковДанных().Запрос Тогда 
				лСписокИдЗапросов.Добавить(лСтрокаСФайлом.id);
			ИначеЕсли лСтрокаСФайлом.Тип = типыИсточниковДанных().Код Тогда 
				лСписокИдКодов.Добавить(лСтрокаСФайлом.id);
			КонецЕсли;
		КонецЦикла; 
		
		Если лСписокИдПакетов.Количество() > 0 Тогда 
			Результат = гУдалитьФайлыСЗапросамиВОблаке(лСоединение, ПолучитьJSONЗначения(лСписокИдПакетов));	
		Иначе
			Результат = гУдалитьЭлементыПоСпискуВОблаке(лСоединение, мТекущийПакет, ПолучитьJSONЗначения(лСписокИдЗапросов), ПолучитьJSONЗначения(лСписокИдКодов));	
		КонецЕсли;
		
		Если Результат.Статус <> "OK" Тогда 
			Сообщить(Результат.ТекстОшибки, СтатусСообщения.Важное);
		Иначе
			ОбновитьДействие();
			Если Не ПустаяСтрока(Результат.Информация) Тогда 
				Сообщить(Результат.Информация, СтатусСообщения.Информация);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПослеЗакрытияВопросаУдалить()

Процедура ОбработкаРезультатаВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		ЗакрытьформуСВыбором(ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры	
	

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ЗакрыватьПриЗакрытииВладельца = Истина;
	мПредыдущийЭлемент            = Неопределено;
	
	ОбновитьДействие(Отказ);
	
	Если Не Отказ Тогда 
		Если Режим = гОперацииСЗапросами().СохранитьКАК ИЛИ Режим = гОперацииСЗапросами().Сохранить ИЛИ Режим = гОперацииСЗапросами().СохранитьВОблако Тогда 
			ЭлементыФормы.КнопкаВыполнить.Заголовок = "Сохранить";
			типЭлемента = Тип;
		ИначеЕсли Режим = гОперацииСЗапросами().ЗагрузитьИзОблака Тогда 
			Если СписокЭлементовИзОблака.Количество() = 0 Тогда 
				ПоказатьПредупреждение(,"Вы еще не сохраняли запросы в облаке.", 10, "Диалог выбора файла в облаке");
				Отказ = Истина;
			Иначе
				ЭлементыФормы.КнопкаВыполнить.Заголовок = "Загрузить";
			КонецЕсли;
		Иначе
			Сообщить("Не определен режим открытия диалога. Обратитесь к разработчику.", СтатусСообщения.Важное); //#рефакторинг сделать более информативное сообщение, упростить отправку ошибки
			Отказ = Истина;
		КонецЕсли;
		
		Если Не Отказ Тогда 
			ЭлементыФормы.НеВключатьПодчиненныеЗапросы.Видимость = (типЭлемента = типыИсточниковДанных().Запрос И ЭтоЗапись(Режим));
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КнопкаДомойНажатие(Элемент)
	ЗаполнитьПакетамиИзоблака(Неопределено);
КонецПроцедуры

Процедура КнопкаУровеньВверхНажатие(Элемент)
	ЗаполнитьЗапросамиИзОблака(мТекущийПакет, режимыФормированияСписка().Вверх,,Ложь);
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Элемент)
	КнопкаВыполнитьНажатиеДействие();
КонецПроцедуры // КнопкаВыполнитьНажатие()

Процедура КнопкаОтменитьНажатие(Элемент)
	Закрыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ <СписокЭлементовИзОблака>

Процедура СписокЭлементовИзОблакаПриАктивизацииСтроки(Элемент)
	лТекущиеДанные = Элемент.ТекущиеДанные;
	Если лТекущиеДанные <> Неопределено Тогда 
		// если список источников не пуст
		Если Не ЭтоЗапись(Режим) Тогда 
			ИмяЭлементаИзОблака = лТекущиеДанные.Имя;
			типЭлемента = лТекущиеДанные.Тип;
			мПредыдущийЭлемент = Новый Структура("Имя, Тип", лТекущиеДанные.Имя, лТекущиеДанные.Тип);
		ИначеЕсли лТекущиеДанные <> Неопределено И лТекущиеДанные.Тип = Тип Тогда 
			Если мПредыдущийЭлемент <> Неопределено Тогда 
				ИмяЭлементаИзОблака = лТекущиеДанные.Имя;
			КонецЕсли;
			мПредыдущийЭлемент = Новый Структура("Имя, Тип", лТекущиеДанные.Имя, лТекущиеДанные.Тип);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура СписокЭлементовИзОблакаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Тип = гТипыИсточниковДанных().Пакет ИЛИ ВыбраннаяСтрока.Тип = гТипыИсточниковДанных().Код Тогда 
		Если ВыбраннаяСтрока.Тип = Тип Тогда 
			ИмяЭлементаИзОблака = ВыбраннаяСтрока.Имя;
		КонецЕсли;
		КнопкаВыполнитьНажатиеДействие();
	Иначе
		Если ВыбраннаяСтрока.Тип = типыИсточниковДанных().Пакет Тогда 
			ЗаполнитьЗапросамиИзОблака(ВыбраннаяСтрока.id, режимыФормированияСписка().ВыбратьНовогоРодителя, Новый Структура("идРодителя, Представление", Неопределено, "[" + ВыбраннаяСтрока.Имя + "]"), Ложь);
		ИначеЕсли ВыбраннаяСтрока.Тип = типыИсточниковДанных().Запрос Тогда 
			ЗаполнитьЗапросамиИзОблака(мТекущийПакет, режимыФормированияСписка().ВыбратьНовогоРодителя, Новый Структура("идРодителя, Представление", ВыбраннаяСтрока.id, ВыбраннаяСтрока.Имя), Ложь);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанельКонтМенюУдалить(Кнопка)
	ПоказатьВопрос(Новый ОписаниеОповещения("ПослеЗакрытияВопросаУдалить", ЭтаФорма, Новый Структура),
		"Удалить выбранные элементы?",
		РежимДиалогаВопрос.ДаНет,,
		КодВозвратаДиалога.Да,
		"Удаление сохраненных данных в облаке.");
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мТекущийПуть = Новый Массив;