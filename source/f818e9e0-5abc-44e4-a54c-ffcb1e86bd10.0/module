////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мМожноПродолжитьПоиск;

Перем мНастройкиПрокси;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция УстановитьВидимостьДоступность()
	ЭлементыФормы.ПанельРезультатыПоиска.Страницы.Облако.Видимость = флажокИскатьВОблаке;
	ЭлементыФормы.ПанельРезультатыПоиска.Страницы.Локально.Видимость = флажокИскатьЛокально;
КонецФункции // УстановитьВидимостьДоступность()

Процедура ИзменитьМестоПоискаДействие(Элемент)
	
	// запросы / алгоритмы
	Если Не флажокЗапросы И Не флажокАлгоритмы Тогда 
		Если Элемент = Неопределено Тогда 
			флажокЗапросы = Истина;
			флажокАлгоритмы = Истина;
		ИначеЕсли Элемент.Имя = "флажокАлгоритмы" Тогда 
			флажокЗапросы = Истина;
		Иначе 
			флажокАлгоритмы = Истина;
		КонецЕсли;
	КонецЕсли;
	
	// название / текст
	Если Не флажокНазвание И Не флажокТекст Тогда 
		Если Элемент = Неопределено Тогда 
			флажокНазвание = Истина;
			флажокТекст = Истина;
		ИначеЕсли Элемент.Имя = "флажокНазвание" Тогда 
			флажокТекст = Истина;
		Иначе 
			флажокНазвание = Истина;
		КонецЕсли;
	КонецЕсли;
	
	// локально / в облаке
	лСоединение = гВосстановитьИдентификаторСессииConsqueryCloud();
	Если Элемент <> Неопределено И Элемент.Имя = "флажокИскатьВОблаке" И флажокИскатьВОблаке И Не ЗначениеЗаполнено(лСоединение) Тогда 
		ПоказатьПредупреждение(, "Для поиска в облаке необходимо к нему подключиться.");
		флажокИскатьВОблаке = Ложь;
		флажокИскатьЛокально = Истина;
	Иначе
		Если Не флажокИскатьВОблаке И Не флажокИскатьЛокально Тогда 
			Если Элемент = Неопределено Тогда 
				флажокИскатьЛокально = Истина;
				Если ЗначениеЗаполнено(лСоединение) Тогда 
					флажокИскатьВОблаке = Истина;
				КонецЕсли;
			ИначеЕсли Элемент.Имя = "флажокИскатьВОблаке" Тогда 
				флажокИскатьЛокально = Истина;
			ИначеЕсли ЗначениеЗаполнено(лСоединение) Тогда 
				флажокИскатьВОблаке = Истина;
			Иначе
				ПоказатьПредупреждение(, "Должна быть указана хотя бы одна область поиска.");
				флажокИскатьЛокально = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры //ИзменитьМестоПоискаДействие()

//Рекурсивная процедура поиска текста
Функция НайтиЗапросыПоСтруктуреПоискаРекурсивно(СтруктураДляПоиска, Дерево)
	
	Для каждого ТекСтрока Из Дерево.Строки Цикл
		Если СтруктураДляПоиска.флажокТекст тогда
			Если СтруктураДляПоиска.флажокТекст И Найти(НРег(ТекСтрока.ТекстЗапроса), НРег(СтруктураДляПоиска.СтрокаПоиска)) > 0 
				ИЛИ СтруктураДляПоиска.флажокНазвание И Найти(НРег(ТекСтрока.Имя), НРег(СтруктураДляПоиска.СтрокаПоиска)) > 0 тогда
				НоваяСтрока               = РезультатПоиска.Добавить();
				НоваяСтрока.Тип           = 0;
				НоваяСтрока.СтрокаЗапроса = ТекСтрока.Идентификатор;
				НоваяСтрока.ИмяЗапроса    = ТекСтрока.Имя;
			КонецЕсли;
		КонецЕсли;
		НайтиЗапросыПоСтруктуреПоискаРекурсивно(СтруктураДляПоиска, ТекСтрока)
	КонецЦикла; 
	
	Возврат Истина;
	
КонецФункции // НайтиЗапросыПоСтруктуреПоискаРекурсивно()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	ИзменитьМестоПоискаДействие(Неопределено);
	УстановитьВидимостьДоступность();
	ТекущийЭлемент = ЭлементыФормы.СтрокаПоиска;
	
	мНастройкиПрокси = гВосстановитьНастройкиПрокси();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КоманднаяПанельВОблакеПродолжитьПоиск(Кнопка)
	ОбработкаДействияНайти(Истина)
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура НайтиНажатие(Элемент)
	ОбработкаДействияНайти();
КонецПроцедуры

Процедура ОбработкаДействияНайти(Продолжение = Ложь)
	
	Если флажокИскатьЛокально Тогда 		
		РезультатПоиска.Очистить();
		
		Если флажокЗапросы Тогда 
			НайтиЗапросыПоСтруктуреПоискаРекурсивно(
				Новый Структура("флажокНазвание, флажокТекст, флажокИскатьВОблаке, флажокИскатьЛокально, СтрокаПоиска", флажокНазвание, флажокТекст, флажокИскатьВОблаке, флажокИскатьЛокально, СтрокаПоиска),
				ВладелецФормы.ДеревоЗапросов);		
		КонецЕсли;
			
		Если флажокАлгоритмы Тогда
			Для каждого СтрокаСКодом Из ВладелецФормы.ИсполняемыйКод Цикл
				Если флажокТекст И Найти(НРег(СтрокаСКодом.Текст), НРег(СтрокаПоиска)) > 0 ИЛИ 
					флажокНазвание И Найти(НРег(СтрокаСКодом.Имя), НРег(СтрокаПоиска)) тогда
					НоваяСтрока               = РезультатПоиска.Добавить();
					НоваяСтрока.Тип           = 1;
					НоваяСтрока.СтрокаКода    = СтрокаСКодом.ИдентификаторСтроки;
					НоваяСтрока.ИмяКода       = СтрокаСКодом.Имя;
					
					лНайденнаяСтрокаЗапроса   = ВладелецФормы.ДеревоЗапросов.Строки.Найти(СтрокаСКодом.ИдентификаторЗапроса, "Идентификатор", Истина);
					НоваяСтрока.СтрокаЗапроса = лНайденнаяСтрокаЗапроса.Идентификатор;
					НоваяСтрока.ИмяЗапроса    = лНайденнаяСтрокаЗапроса.Имя;
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
	КонецЕсли;
		
	Если флажокИскатьВОблаке Тогда 
		
		Если Продолжение И мМожноПродолжитьПоиск Тогда 
			лНачальнаяПозицияПоиска = РезультатПоискаВОблаке.Количество();
		Иначе
			лНачальнаяПозицияПоиска = 0;
			РезультатПоискаВОблаке.Очистить();
		КонецЕсли;
		
		ЭлементыФормы.КоманднаяПанельВОблаке.Кнопки.ПродолжитьПоиск.Доступность = Ложь;
		
		лСоединение = гВосстановитьИдентификаторСессииConsqueryCloud();
		лРезультатПоискаВОблаке = гПоискВОблаке(лСоединение, СтрокаПоиска, флажокЗапросы, флажокАлгоритмы, флажокНазвание, флажокТекст, лНачальнаяПозицияПоиска, мНастройкиПрокси);
		
		Если лРезультатПоискаВОблаке.Статус = "OK" Тогда 
			мМожноПродолжитьПоиск = лРезультатПоискаВОблаке.МожноПродолжитьПоиск;
			ЭлементыФормы.КоманднаяПанельВОблаке.Кнопки.ПродолжитьПоиск.Доступность = мМожноПродолжитьПоиск;
			Для каждого СтрокаСЗапросом Из лРезультатПоискаВОблаке.ДанныеИзОблака Цикл
				НоваяСтрока = РезультатПоискаВОблаке.Добавить();
				НоваяСтрока.Тип           = СтрокаСЗапросом.type;
				НоваяСтрока.СтрокаЗапроса = СтрокаСЗапросом.idFromApp;
				НоваяСтрока.ИмяЗапроса    = СтрокаСЗапросом.nameQuery;
				Если ЗначениеЗаполнено(СтрокаСЗапросом.nameCode) Тогда 
					НоваяСтрока.ИмяКода    = СтрокаСЗапросом.nameCode;
					НоваяСтрока.СтрокаКода = СтрокаСЗапросом.idRowFromApp;
				КонецЕсли;
				
				НоваяСтрока.имяФайла = СтрокаСЗапросом.fileName;
				НоваяСтрока.идФайла  = СтрокаСЗапросом.idPackage;				
			КонецЦикла; 
		Иначе
			Сообщить("Ошибка поиска в облаке: " + лРезультатПоискаВОблаке.ТекстОшибки);
		КонецЕсли;
	Иначе
		лРезультатПоискаВОблаке = Неопределено
	КонецЕсли;	
		
	Если Не Продолжение Тогда 
		Если РезультатПоиска.Количество() > 0 тогда
			ТекущийЭлемент = ЭлементыФормы.РезультатПоиска;
		ИначеЕсли РезультатПоискаВОблаке.Количество() > 0 тогда
			ТекущийЭлемент = ЭлементыФормы.РезультатПоискаВОблаке;
		Иначе
			ПоказатьПредупреждение(, "Совпадений не найдено.", 2);
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаДействияНайти()

Процедура флажокИскатьВОблакеПриИзменении(Элемент)
	ИзменитьМестоПоискаДействие(Элемент);
КонецПроцедуры

Процедура флажокИскатьЛокальноПриИзменении(Элемент)
	ИзменитьМестоПоискаДействие(Элемент);
КонецПроцедуры

Процедура флажокЗапросыПриИзменении(Элемент)
	ИзменитьМестоПоискаДействие(Элемент);
КонецПроцедуры

Процедура флажокАлгоритмыПриИзменении(Элемент)
	ИзменитьМестоПоискаДействие(Элемент);
КонецПроцедуры

Процедура флажокНазваниеЗапросаПриИзменении(Элемент)
	ИзменитьМестоПоискаДействие(Элемент);
КонецПроцедуры

Процедура флажокТекстЗапросаПриИзменении(Элемент)
	ИзменитьМестоПоискаДействие(Элемент);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ РезультатПоиска

Процедура РезультатПоискаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока.Тип = 0 ИЛИ ВыбраннаяСтрока.Тип = 2 тогда
		//позиционируем дерево с запросами на данной строке
		ВладелецФормы.ЭлементыФормы.ДеревоЗапросов.ТекущаяСтрока = ВладелецФормы.ДеревоЗапросов.Строки.Найти(ВыбраннаяСтрока.СтрокаЗапроса, "Идентификатор", Истина);
		ВладелецФормы.Активизировать();
	ИначеЕсли ВыбраннаяСтрока.Тип = 1 тогда
		
		//позиционируем дерево с запросами на данной строке и открываем код
		ФормаВариантовКода = ВладелецФормы.мФормаИсполняемыйКод;
		Если ФормаВариантовКода.Открыта() Тогда 
			ФормаВариантовКода.Закрыть();
		КонецЕсли;
		ВладелецФормы.ЭлементыФормы.ДеревоЗапросов.ТекущаяСтрока = ВладелецФормы.ДеревоЗапросов.Строки.Найти(ВыбраннаяСтрока.СтрокаЗапроса, "Идентификатор", Истина);
		ФормаВариантовКода.Открыть();
		ФормаВариантовКода.ЭлементыФормы.ИсполняемыйКодСписок.ТекущаяСтрока = ФормаВариантовКода.ИсполняемыйКодСписок.Найти(ВыбраннаяСтрока.СтрокаКода, "ИдентификаторСтроки");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ РезультатПоискаВОблаке

Процедура РезультатПоискаВОблакеВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	лСоединение = гВосстановитьИдентификаторСессииConsqueryCloud();
	лРезультат = гПолучитьДанныеДляПревьюИзОблака(лСоединение, ВыбраннаяСтрока.идФайла, ВыбраннаяСтрока.СтрокаЗапроса, ВыбраннаяСтрока.СтрокаКода);
	
	Если лРезультат.Статус = "OK" Тогда 
		лФорма = ПолучитьФорму("ВнешняяОбработка.КонсольЗапросов.Форма.ФормаПредпросмотрИзОблака",, ЭтаФорма);
		лФорма.Заголовок = "Предпросмотр (запрос " + ?(ЗначениеЗаполнено(ВыбраннаяСтрока.ИмяКода), " + алгоритм ", "") + "): " + ВыбраннаяСтрока.имяФайла + " / " + ВыбраннаяСтрока.ИмяЗапроса + ?(ЗначениеЗаполнено(ВыбраннаяСтрока.ИмяКода), " / " + ВыбраннаяСтрока.ИмяКода, "" );
		лФорма.идПакета = лРезультат.ДанныеИзОблака.idPackage;
		лФорма.идЗапроса = лРезультат.ДанныеИзОблака.idQuery;
		лФорма.идКода = лРезультат.ДанныеИзОблака.idCode;
		лФорма.полноеИмяФайла = ВыбраннаяСтрока.имяФайла;		
		лФорма.Элементыформы.ТекстЗапроса.УстановитьТекст(лРезультат.ДанныеИзОблака.textQuery);
		лФорма.Элементыформы.КодДляВыполнения.УстановитьТекст(лРезультат.ДанныеИзОблака.textCode);
		лФорма.Открыть();
	Иначе
		Сообщить("Ошибка поиска в облаке: " + лРезультат.ТекстОшибки);
	КонецЕсли;
КонецПроцедуры
